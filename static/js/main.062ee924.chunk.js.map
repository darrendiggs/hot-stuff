{"version":3,"sources":["components/Loader.js","components/FireMarker.js","components/VolcanoMarker.js","components/EventInfoBox.js","components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","src","frameBorder","class","FireMarker","lat","lng","onClick","VolcanoMarker","EventInfoBox","props","Toast","setlocationInfo","ToastBody","info","title","id","Map","eventData","center","zoom","useState","locationInfo","markers","map","ev","categories","geometries","coordinates","length","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","App","setEventData","loading","setLoading","useEffect","a","fetch","res","json","events","fetchEvents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.062ee924.chunk.js","sourcesContent":["\n\nfunction Loader() {\n  return (\n    <div className=\"container-fluid text-center loader\">\n      <iframe src=\"https://giphy.com/embed/dVnzGW7UehcEpwLxBm\" frameBorder=\"0\" class=\"giphy-embed\" ></iframe>\n      <h2 className=\"fw-bold\">Loading!</h2>\n    </div>\n  )\n}\n\n\n\nexport default Loader\n","\n\nconst FireMarker = ({ lat, lng, onClick }) => {\n  return (\n    <div className=\"location-marker\" onClick={onClick}>\n      <h4 className=\"location-marker\">ðŸ”¥</h4> \n    </div>\n  )\n}\n\nexport default FireMarker","\n\nconst VolcanoMarker = ({ lat, lng, onClick }) => {\n  return (\n    <div className=\"location-marker\" onClick={onClick}>\n      <h4 className=\"location-marker\">ðŸŒ‹</h4>\n    </div>\n  )\n}\n\nexport default VolcanoMarker","\n\nimport { Toast, ToastBody } from 'reactstrap';\n\nfunction EventInfoBox(props) {\n  return (\n    <div className=\"eventInfo\">\n\n      <Toast onClick={() => props.setlocationInfo(null)}>\n        <ToastBody>\n          <p>{props.info.title}</p>\n          <p>Id: {props.info.id}</p>\n          </ToastBody>\n      </Toast>\n    </div>\n  )\n} \n\nexport default EventInfoBox\n","\nimport { useState } from 'react'\nimport GoogleMap from 'google-map-react'\nimport FireMarker from './FireMarker'\nimport VolcanoMarker from './VolcanoMarker'\nimport EventInfoBox from './EventInfoBox'\n\n\nconst Map = ({ eventData, center, zoom }) => {\n\n  const [locationInfo, setlocationInfo] = useState(null)\n\n  const markers = eventData.map(ev => {\n    if (ev.categories[0].id === 8) {\n      return <FireMarker\n        lat={ev.geometries[0].coordinates[1]}\n        lng={ev.geometries[0].coordinates[0]}\n        onClick={() => setlocationInfo({ id: ev.id, title: ev.title })}\n      />\n    }\n    if (ev.categories[0].id === 12 && ev.geometries[0].coordinates.length === 2) {\n      return <VolcanoMarker\n        lat={ev.geometries[0].coordinates[1]}\n        lng={ev.geometries[0].coordinates[0]}\n        onClick={() => setlocationInfo({ id: ev.id, title: ev.title })}\n      />\n    }\n\n  })\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h1 className=\"title text-center fw-bold \">ðŸ¥µ HOT STUFF</h1>\n        </div>\n      </div>\n      <div className=\"map conatiner-fluid \">\n        <GoogleMap\n          bootstrapURLKeys={{ key: 'AIzaSyBYgDmN2G0xMhz4od_rTx99x2BFi7L1hic' }}\n          defaultCenter={center}\n          defaultZoom={zoom}\n        >\n          {markers}\n\n        </GoogleMap>\n        {locationInfo && <EventInfoBox\n          info={locationInfo}\n          className=\"eventInfo mx-auto\"\n          setlocationInfo={setlocationInfo}\n        />}\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h3 className=\"text-center nasaBanner\">Powered By NASA</h3>\n        </div>\n      </div>\n    </>\n  )\n}\n\nMap.defaultProps = {\n  center: {\n    lat: 40.3428,\n    lng: -98.6836\n  },\n  zoom: 3\n}\n\nexport default Map","\n\nimport { useState, useEffect } from 'react'\nimport Loader from './components/Loader';\nimport Map from \"./components/Map\";\n\n\nfunction App() {\n  const [eventData, setEventData] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true)\n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n      const { events } = await res.json()\n\n      setEventData(events)\n      setLoading(false)\n    }\n\n    fetchEvents()\n  }, [])\n\n  return (\n    <div className=\"container\">\n      { !loading ? <Map eventData={eventData}/> : <Loader/> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}